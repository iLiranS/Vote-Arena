// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// database connections
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User related 
enum Role {
  User
  Admin
  VIP
}

model Award {
  id     Int    @id @default(autoincrement())
  title  String @unique
  src    String
  owners User[] @relation("UserAwards")
}

model User {
  id             String   @id @default(cuid())
  role           Role     @default(User)
  createdAt      DateTime @default(now())
  name           String
  imageSrc       String
  polls          Poll[]
  participations Int      @default(0)
  awards         Award[]  @relation("UserAwards")
}

// poll related 

model Question {
  id     Int    @id @default(autoincrement())
  title  String @db.VarChar(75) // I don't want long questions
  src    String @db.VarChar(400) // just in case
  poll   Poll   @relation(fields: [pollId], references: [id])
  pollId String
}

model Poll {
  id           String     @id @default(cuid())
  owner        User       @relation(fields: [ownerId], references: [id])
  ownerId      String
  title        String     @db.VarChar(50)
  createdAt    DateTime   @default(now())
  isPrivate    Boolean
  participants Int
  isVideo      Boolean
  results      Int[] // each related to question index.
  questions    Question[] // array of {title, src}
  pollResultId Int
}
